datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Blog {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  ngoId       String? @db.ObjectId
  userId      String? @db.ObjectId
  ngo         Ngo?    @relation("NgoBlogs", fields: [ngoId], references: [id])
  user        User?   @relation("UserBlogs", fields: [userId], references: [id])
}



model NGO {
  id           Int       @id @default(autoincrement())
  name         String
  description  String
  field        String
  location     String
  email        String
  website      String
  locationLink String
  logo         String
  photos       String[]  // Array of strings
  ratings      Int
}
model User {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  firstname String
  lastname  String
  email     String          @unique
  password  String
  gender    String
  phone     String
  address   String
  blogs     Blog[]          @relation("UserBlogs")
  ngos      Ngo[]           @relation("UserNgos")
  registeredEvents RegisteredEvent[]
}

model Event {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  startDate   DateTime
  endDate     DateTime
  status      EventStatus
  ngoId       String?         @db.ObjectId
  ngo         Ngo?            @relation("NgoEvents", fields: [ngoId], references: [id])
  registeredUsers RegisteredEvent[]
}

model RegisteredEvent {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  userId    String  @db.ObjectId
  eventId   String  @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  event     Event   @relation(fields: [eventId], references: [id])
}

enum EventStatus {
  UPCOMING
  ENDED
  STARTED
}
